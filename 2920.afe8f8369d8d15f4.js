"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[2920],{2920:(l,s,i)=>{i.r(s),i.d(s,{Geolocation:()=>u,GeolocationWeb:()=>a});var t=i(467),c=i(5083);class a extends c.E_{getCurrentPosition(n){return(0,t.A)(function*(){return new Promise((e,r)=>{navigator.geolocation.getCurrentPosition(o=>{e(o)},o=>{r(o)},Object.assign({enableHighAccuracy:!1,timeout:1e4,maximumAge:0},n))})})()}watchPosition(n,e){return(0,t.A)(function*(){return`${navigator.geolocation.watchPosition(o=>{e(o)},o=>{e(null,o)},Object.assign({enableHighAccuracy:!1,timeout:1e4,maximumAge:0},n))}`})()}clearWatch(n){return(0,t.A)(function*(){window.navigator.geolocation.clearWatch(parseInt(n.id,10))})()}checkPermissions(){var n=this;return(0,t.A)(function*(){if(typeof navigator>"u"||!navigator.permissions)throw n.unavailable("Permissions API not available in this browser");const e=yield window.navigator.permissions.query({name:"geolocation"});return{location:e.state,coarseLocation:e.state}})()}requestPermissions(){var n=this;return(0,t.A)(function*(){throw n.unimplemented("Not implemented on web.")})()}}const u=new a}}]);